/*
Memória Compartilhada
Crie um código-fonte que utilize fork() e shmget() entre 2 processos (pai e filho). Seu código deve garantir que:
o processo pai e o processo filho compartilhem uma variável simples (por exemplo, inteiro - valor 1)
o processo pai imprime o valor inicial dessa variável; em seguida, cria o processo filho e espera-o
o processo filho acessa esta variável, realiza uma operação (por exemplo, adição - valor 2, totalizando 3), modificando o valor; em seguida, o processo filho termina
o processo pai realiza uma outra operação (por exemplo, multiplicação - valor 4, totalizando 12), modificando novamente o valor, e imprime novamente a variável
Essa lógica de execução deve ser garantida no seu código-fonte em C.
*/

//Matheus Oliveira Bitencourt 32170157 05N11
#include  <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/shm.h>


int main()
{
    pid_t childpid;
    pid_t parentid;
    int shm_id;

    shm_id = shmget(IPC_PRIVATE, 1024, IPC_CREAT |  0660);
    if (shm_id < 0) printf("shmget error\n");

    int *compartilhada = (int*)shmat(shm_id, NULL, 0);

    *compartilhada = 1;

    printf("valor inicial %i\n",*compartilhada);

    parentid = getppid();
    printf("parent %i\n",parentid);

    childpid = fork();
    printf("childpid %i\n",childpid);

    if (childpid == 0)
    {
        *compartilhada += 2;
        printf("variavel compartilhada ao somar 2 = %i\n",*compartilhada);
    }
    else
    {
        *compartilhada *= 4 ;
        printf("variavel compartilhada ao multiplicar 4 = %i\n",*compartilhada);
    }
    return 0;
}
